{"version":3,"sources":["components/Header.js","components/ToDoItem.js","components/ToDoList.js","components/ToDoForm.js","components/ToDoFilter.js","helpers.js","modules/Storage.js","components/App.js","components/Help.js","components/NotFound.js","index.js","components/Router.js"],"names":["Header","props","className","tagline","ToDoItem","e","keyCode","target","blur","todo","this","data","strike","done","data-id","uuid","value","id","type","checked","onChange","toggleToDoDone","htmlFor","style","textDecoration","text","updateTodoText","onKeyUp","handleKeyUp","onClick","removeToDo","Component","ToDoList","filteredItems","filtered","items","item","filter","push","map","key","updateToDoText","React","ToDoForm","textInput","createRef","handleSubmit","preventDefault","current","trim","addToDo","currentTarget","reset","onSubmit","placeholder","ref","aria-hidden","ToDoFilter","filters","role","aria-label","activeFilter","setFilter","getRandomTagline","Math","floor","random","length","canUseLocalStorage","Error","localStorage","setItem","defaultValue","getItem","removeItem","App","setState","state","toDoItems","checkbox","storageKey","old","Storage","get","JSON","parse","set","stringify","Help","document","title","NotFound","ReactDOM","render","basename","exact","path","component","querySelector"],"mappings":"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","file":"static/js/main.324e8292.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = props => {\n  return (\n    <header className=\"header\">\n      <h1>what to do?</h1>\n      <span className=\"tagline\">{props.tagline}</span>\n    </header>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport class ToDoItem extends Component {\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  }\n\n  render() {\n    const todo = this.props.data;\n    let strike = \"\";\n    todo.done ? (strike = \"line-through\") : (strike = \"none\");\n\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              value={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.props.toggleToDoDone}\n            ></input>\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            ></label>\n          </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            style={{ textDecoration: strike }}\n            type=\"text\"\n            className=\"form-control\"\n            value={todo.text}\n            onChange={e => {\n              this.props.updateTodoText(todo.uuid, e.target.value);\n            }}\n            onKeyUp={e => {\n              this.handleKeyUp(e);\n            }}\n          ></input>\n        </td>\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={e => this.props.removeToDo(todo.uuid)}\n          ></i>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\nimport { ToDoItem } from \"./ToDoItem\";\n\nexport class ToDoList extends React.Component {\n  filteredItems = () => {\n    const filtered = [];\n\n    for (const uuid in this.props.items) {\n      const item = this.props.items[uuid];\n\n      if (\n        this.props.filter === \"all\" ||\n        (this.props.filter === \"done\" && item.done === true) ||\n        (this.props.filter === \"undone\" && item.done === false)\n      ) {\n        filtered.push(item);\n      }\n    }\n\n    return filtered;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items table table-borderless\">\n          <tbody>\n            {this.filteredItems().map(item => (\n              <ToDoItem\n                key={`todo-item-${item.uuid}`}\n                data={item}\n                updateToDoText={this.props.updateToDoText}\n                toggleToDoDone={this.props.toggleToDoDone}\n                removeToDo={this.props.removeToDo}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport class ToDoForm extends React.Component {\n  textInput = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const text = this.textInput.current.value.trim();\n    this.props.addToDo(text);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Add new Todo item\"\n          ref={this.textInput}\n        ></input>\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nclass ToDoFilter extends React.Component {\n  filters = [\"all\", \"undone\", \"done\"];\n\n  render() {\n    return (\n      <div className=\"todo-filters text-right\">\n        <div\n          className=\"btn-group btn-group-sm\"\n          role=\"group\"\n          aria-label=\"Set a filter to show items\"\n        >\n          {this.filters.map(filter => (\n            <button\n              type=\"button\"\n              className={`btn btn-light ${\n                this.props.activeFilter === filter ? \"active\" : \"\"\n              }`}\n              onClick={e => {\n                this.props.setFilter(filter);\n              }}\n              key={filter}\n            >\n              {filter}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoFilter;\n","const randomArrayItem = data => {\n  return data[Math.floor(Math.random() * data.length)];\n};\n\nexport const getRandomTagline = () => {\n  const taglines = [\n    'This could be your bucket list',\n    'This could be your shopping list',\n    'This could be your wedding list'\n  ];\n  return randomArrayItem(taglines);\n};\n","class Storage {\n  constructor() {\n    if (!this.canUseLocalStorage()) {\n      throw Error(\"The local storage is full or disabled\");\n    }\n  }\n  set(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  get(key, defaultValue = null) {\n    const value = localStorage.getItem(key);\n\n    if (value != null) {\n      return value;\n    }\n\n    return defaultValue;\n  }\n\n  canUseLocalStorage() {\n    let test = \"test\";\n\n    try {\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default new Storage();\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { ToDoList } from \"./ToDoList\";\nimport { ToDoForm } from \"./ToDoForm\";\nimport ToDoFilter from \"./ToDoFilter\";\nimport \"../sass/style.scss\";\nimport uuid from \"uuid/v4\";\nimport { getRandomTagline } from \"../helpers.js\";\nimport Storage from \"../modules/Storage.js\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.storageKey = \"react-todo\";\n    const old = Storage.get(this.storageKey);\n    if (old) {\n      this.state = JSON.parse(old);\n    } else {\n      this.state = {\n        toDoItems: {},\n        filter: \"undone\"\n      };\n      Storage.set(this.storageKey, JSON.stringify(this.state));\n    }\n  }\n\n  componentDidUpdate() {\n    Storage.set(this.storageKey, JSON.stringify(this.state));\n  }\n\n  addToDo = text => {\n    const todo = {\n      uuid: uuid(),\n      text: text,\n      done: false\n    };\n\n    this.setState(state => {\n      state.toDoItems[todo.uuid] = todo;\n      return state;\n    });\n  };\n\n  updateTodoText = (uuid, text) => {\n    this.setState(state => {\n      state.toDoItems[uuid].text = text;\n      return state;\n    });\n  };\n\n  toggleToDoDone = e => {\n    const checkbox = e.target;\n    this.setState(state => {\n      state.toDoItems[checkbox.value].done = checkbox.checked;\n      return state;\n    });\n  };\n\n  removeToDo = uuid => {\n    this.setState(state => {\n      delete state.toDoItems[uuid];\n      return state;\n    });\n  };\n  setFilter = filter => {\n    this.setState(state => {\n      state.filter = filter;\n      return state;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline={getRandomTagline()} />\n        <ToDoForm addToDo={this.addToDo} />\n        <ToDoFilter\n          activeFilter={this.state.filter}\n          setFilter={this.setFilter}\n        />\n        <ToDoList\n          items={this.state.toDoItems}\n          filter={this.state.filter}\n          updateTodoText={this.updateTodoText}\n          toggleToDoDone={this.toggleToDoDone}\n          removeToDo={this.removeToDo}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Header } from './Header';\n\nexport class Help extends React.Component {\n  componentDidMount() {\n    document.title = 'Help | What to do?';\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline=\"Your questions will be answered here.\" />\n        <p>Where is the data stored?</p>\n        <p>We store all information in your browser's LocalStorage.</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Header } from './Header';\n\nexport class NotFound extends React.Component {\n  componentDidMount() {\n    document.title = 'Error 404 | What to do?';\n  }\n\n  render() {\n    return (\n      <div className=\"conatainer\">\n        <Header tagline=\"404 - Page not found!\" />\n        <div className=\"alert alert-warning\">\n          <strong>\n            Oops....sorry!\n            <br />\n          </strong>\n          The requested page could not be found.\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Router } from './components/Router';\n\nReactDOM.render(<Router />, document.querySelector('#root'));\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport { Help } from \"./Help\";\nimport { NotFound } from \"./NotFound\";\n\nexport const Router = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/help\" component={Help} />\n      <Route component={NotFound} />\n    </Switch>\n  </HashRouter>\n);\n"],"sourceRoot":""}